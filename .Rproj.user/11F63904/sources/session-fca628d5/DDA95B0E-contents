---
title: "Assignment 1: Census Data Quality for Policy Decisions"
subtitle: "Evaluating Data Reliability for Algorithmic Decision-Making"
author: "Katherine (Katie) Knox"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
execute:
  warning: false
  message: false
---

# Assignment Overview

## Scenario

You are a data analyst for the **Michigan Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.

Drawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.

## Learning Objectives

- Apply dplyr functions to real census data for policy analysis
- Evaluate data quality using margins of error 
- Connect technical analysis to algorithmic decision-making
- Identify potential equity implications of data reliability issues
- Create professional documentation for policy stakeholders

## Submission Instructions

**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`

Make sure to update your `_quarto.yml` navigation to include this assignment under an "Assignments" menu.

# Part 1: Portfolio Integration

Create this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:

```
- text: Assignments
  menu:
    - href: assignments/assignment_1/your_file_name.qmd
      text: "Assignment 1: Census Data Exploration"
```
If there is a special character like comma, you need use double quote mark so that the quarto can identify this as text

# Setup

```{r setup}
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidyverse)
library(tidycensus)
library(knitr)
# Set your Census API key
census_api_key(Sys.getenv("47d7ac5fc6fea73d0b5c6df507601e4268de5a6e"))


# Choose your state for analysis - assign it to a variable called my_state
my_state <- 'Michigan'
```

**State Selection:** I have chosen Michigan for this analysis because: I was born in and grew up in Michigan! 

# Part 2: County-Level Resource Assessment

## 2.1 Data Retrieval

**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.

**Requirements:**
- Geography: county level
- Variables: median household income (B19013_001) and total population (B01003_001)  
- Year: 2022
- Survey: acs5
- Output format: wide

**Hint:** Remember to give your variables descriptive names using the `variables = c(name = "code")` syntax.

```{r county-data}
# Write your get_acs() code here
mi_county_pop_income <- get_acs(
  geography = "county", 
  variables = c(
    median_household_income = "B19013_001",
    total_pop = "B01003_001"),
  state = "MI",
  year = 2022,
  output= "wide",
  survey = "acs5")

# Clean the county names to remove state name and "County" 
# Hint: use mutate() with str_remove()
mi_county_pop_income <- mi_county_pop_income %>% 
  mutate(County_Name = str_remove(NAME, " County, Michigan")) 

# Display the first few rows
head(mi_county_pop_income)
```

## 2.2 Data Quality Assessment

**Your Task:** Calculate margin of error percentages and create reliability categories.

**Requirements:**
- Calculate MOE percentage: (margin of error / estimate) * 100
- Create reliability categories:
  - High Confidence: MOE < 5%
  - Moderate Confidence: MOE 5-10%  
  - Low Confidence: MOE > 10%
- Create a flag for unreliable estimates (MOE > 10%)

**Hint:** Use `mutate()` with `case_when()` for the categories.

```{r income-reliability}
# Calculate MOE percentage and reliability categories using mutate()
mi_county_pop_income <- mi_county_pop_income %>%
  mutate(
    income_moe_percent = (median_household_incomeM/ median_household_incomeE)*100
      ) %>%
  mutate(
    income_e_reliability = case_when(
      income_moe_percent < 5 ~ "High Confidence",
      income_moe_percent >=5 & income_moe_percent <= 10 ~ "Moderate Confidence",
      income_moe_percent > 10 ~ "Low Confidence"
    )
  ) %>%
  mutate(
    unreliable_income_e = case_when(
      income_e_reliability == "Low Confidence" ~ TRUE,
      TRUE ~ FALSE
    )
  )
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
income_reliability_summary <- mi_county_pop_income %>%
  group_by(income_e_reliability) %>%
  summarise(num_counties = n()) %>%
  mutate(
    percent_of_counties = (num_counties/ sum(num_counties)) *100
  )
```

## 2.3 High Uncertainty Counties

**Your Task:** Identify the 5 counties with the highest MOE percentages.

**Requirements:**
- Sort by MOE percentage (highest first)
- Select the top 5 counties
- Display: county name, median income, margin of error, MOE percentage, reliability category
- Format as a professional table using `kable()`

**Hint:** Use `arrange()`, `slice()`, and `select()` functions.

```{r high-uncertainty}
# Create table of top 5 counties by MOE percentage
top_5_unreliable <- mi_county_pop_income %>%
  arrange(desc(income_moe_percent)) %>%
  top_n(5, income_moe_percent) %>%
  select(NAME, median_household_incomeE, median_household_incomeM, income_moe_percent, income_e_reliability)
  

# Format as table with kable() - include appropriate column names and caption
top_5_unreliable_formatted <- top_5_unreliable %>%
  mutate(
    median_household_incomeE = paste0("$", format(median_household_incomeE, big.mark = ",", scientific = FALSE)),
    median_household_incomeM = paste0("Â±", "$", format(median_household_incomeM, big.mark = ",", scientific = FALSE)),
    income_moe_percent = paste0(round(income_moe_percent, 2), "%"),
  )

  kable(top_5_unreliable_formatted,
      col.names = c("County Name", "Median Income", "MOE", "MOE Percent of Estimate", "Reliability of Estimate"),
      align = "l",
      caption = "5 Least Reliable Median Income Estimates of Counties in Michigan",
      digits = 2,
      format.args = list(big.mark = ",", scientific = FALSE))
```

**Data Quality Commentary:**

Assistance programs and policies aimed at community development may look at median income to identify priority areas. Areas with lower reliability may have a far lower or higher actual median income than what is reported in the census, and could affect the calculations of how resources are allocated to those areas. Additionally, higher unreliability is more likely in less population geographies because it is harder to get a representative sample, so smaller or less densely populated geographies, which are already often economically vulnerable, may be further marginalized by being overlooked in the prioritization of assistance programs based on these metrics.  

# Part 3: Neighborhood-Level Analysis

## 3.1 Focus Area Selection

**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.

**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.

```{r select-counties}
counties <- c("Kalamazoo", "Crawford", "Keweenaw")

# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties
selected_counties <- filter(mi_county_pop_income, County_Name %in% counties)

# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
selected_counties %>%
  select(NAME, median_household_incomeE, income_moe_percent, income_e_reliability) %>%
  mutate(
    median_household_incomeE = paste0("$", format(median_household_incomeE, big.mark = ",", scientific = FALSE)),
    income_moe_percent = paste0(round(income_moe_percent, 2), "%"),
  ) %>%
kable(col.names = c("County Name", "Median Income", "MOE Percent of Estimate", "Reliability of Estimate"),
      align = "l",
      caption = "3 Selected Counties in Michigan")
```

**Comment on the output:**

I chose: 

- Kalamazoo as a high reliable county and a relatively bigger city in Western Michigan with multiple universities. 
- Crawford is a moderate reliable county and where I used to go fishing with my grandpa :)
- Keweenaw is a low reliable county in the most northern tip of the upper penninsula with a very small population (I didn't know anyone even lived there)

## 3.2 Tract-Level Demographics

**Your Task:** Get demographic data for census tracts in your selected counties.

**Requirements:**

- Geography: tract level
- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)
- Use the same state and year as before
- Output format: wide

**Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.

```{r tract-demographics}
# Define your race/ethnicity variables with descriptive names

# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter
demographics <- get_acs(
  geography = "tract",
  variables = c(White = "B03002_003", Black = "B03002_004", Latinx = "B03002_012", Total = "B03002_001"),
  state = "MI", 
  county = counties,
  year = 2022,
  output="wide"
)

# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
demographics <- demographics %>%
  mutate(percent_black = if_else(TotalE == 0, 0, BlackE / TotalE * 100),
         percent_white = if_else(TotalE == 0, 0, WhiteE / TotalE * 100),
         percent_latin = if_else(TotalE == 0, 0, LatinxE / TotalE * 100) 
  )%>%
  mutate(percent_black_c = paste0(round(percent_black, 2), "%"),
         percent_white_c = paste0(round(percent_white), "%"),
         percent_latin_c = paste0(round(percent_latin, 2), "%")
  )

# Add readable tract and county name columns using str_extract() or similar
demographics <- demographics %>%
  mutate(
    County_Name = str_extract(NAME, "(?<=;\\s)[A-Za-z ]+(?=\\sCounty;)"),
    Tract = str_extract(NAME, "(?<=Census Tract )[0-9.]+")
  )
  
```

## 3.3 Demographic Analysis

**Your Task:** Analyze the demographic patterns in your selected areas.

```{r demographic-analysis}
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
demographics %>% 
  filter(!is.nan(percent_latin)) %>%
  arrange(desc(percent_latin)) %>% 
  slice(1) %>%
  select(County_Name, Tract, percent_latin_c) %>%
  kable(col.names = c("County", "Tract", "Percent Latin"),
        align = "c")
```

```{r demographic-analysis-2}

# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
avg_demo_by_tract <- demographics %>%
  group_by(County_Name) %>%
  summarize(avg_black = mean(percent_black),
            avg_white = mean(percent_white),
            avg_latin = mean(percent_latin))

# Create a nicely formatted table of your results using kable()
avg_demo_by_tract %>%
  mutate(avg_black_c = paste0(round(avg_black, 2), "%"),
         avg_white_c = paste0(round(avg_white, 2), "%"),
         avg_latin_c = paste0(round(avg_latin, 2), "%")) %>%
  select(County_Name, avg_black_c, avg_white_c, avg_latin_c) %>% 
  kable(col.names = c("County", "Avg % Black", "Avg % White", "Avg % Latin"),
        caption = "Average Demographic Makeup of All Census Tracts in 3 MI Counties",
        align = "r")
```

# Part 4: Comprehensive Data Quality Evaluation

## 4.1 MOE Analysis for Demographic Variables

**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.

**Requirements:**
- Calculate MOE percentages for each demographic variable
- Flag tracts where any demographic variable has MOE > 15%
- Create summary statistics

```{r demographic-moe}
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)
demographics <- demographics %>%
  mutate(White_percent_MOE = WhiteM/WhiteE*100,
         Black_percent_MOE = BlackM/BlackE*100, 
         Latin_percent_MOE = LatinxM/LatinxE*100)

# Create a flag for tracts with high MOE on any demographic variable
# Use logical operators (| for OR) in an ifelse() statement
demographics <- demographics %>% 
  mutate(
    flag = case_when(
      White_percent_MOE >=100 |
      Black_percent_MOE >=100 | 
      Latin_percent_MOE >=100 ~
      "MOE Higher than Estimate",
      (White_percent_MOE >=50 & White_percent_MOE < 100) |
      (Black_percent_MOE >=50 & Black_percent_MOE < 100) | 
      (Latin_percent_MOE >=50 & Latin_percent_MOE < 100) ~
      "Very Unreliable",
      (White_percent_MOE >10 & White_percent_MOE < 50) |
      (Black_percent_MOE >10 & Black_percent_MOE < 50) | 
      (Latin_percent_MOE >10 & Latin_percent_MOE < 50) ~
      "Unreliable", 
      White_percent_MOE <=10 |
      Black_percent_MOE <=10 | 
      Latin_percent_MOE <=10 ~
      "Reliable"
    )
  )

# Create summary statistics showing how many tracts have data quality issues
reliability_summary <- demographics %>%
  group_by(flag) %>% 
  summarize(count = n())

kable(reliability_summary,
      col.names = c("Flag", "Number of Tracts"),
      align="c")
```

## 4.2 Pattern Analysis

**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.

```{r pattern-analysis}
# Group tracts by whether they have high MOE issues
# Calculate average characteristics for each group:
# - population size, demographic percentages
moe_issues <- demographics %>% 
  group_by(flag) %>%
  summarise(
    avg_pop_size = mean(TotalE),
    avg_percent_black = mean(if_else(TotalE != 0, BlackE / TotalE * 100, NA_real_), na.rm = TRUE),
    avg_percent_white = mean(if_else(TotalE != 0, WhiteE / TotalE * 100, NA_real_), na.rm = TRUE),
    avg_percent_latin = mean(if_else(TotalE != 0, LatinxE / TotalE * 100, NA_real_), na.rm = TRUE)
  )
  

# Use group_by() and summarize() to create this comparison
# Create a professional table showing the patterns
moe_issues <- moe_issues %>%
  arrange(desc(avg_percent_black)) %>%
  mutate(avg_percent_black_c = paste0(round(avg_percent_black, 2), "%"),
         avg_percent_white_c = paste0(round(avg_percent_white, 2), "%"),
         avg_percent_latin_c = paste0(round(avg_percent_latin, 2), "%")) 


moe_issues %>%
  select(flag, avg_pop_size, avg_percent_black_c, avg_percent_white_c, avg_percent_latin_c) %>% 
  kable(col.names = c("Reliability (Bad to Worst)", "Avg Tract Population Size", "Avg % Black", "Avg % White", "Avg % Latin"),
        caption = "Average Demographic Makeup of All Census Tracts in 3 MI Counties",
        align = "r",
        digits = 0)
```
```{r extra-analysis}
#| warning: true
moe_issues_2 <- demographics %>% 
  group_by(County_Name) %>%
  summarise(
    total_pop_size = sum(TotalE),
    avg_moe_percent_black = mean(if_else(BlackE != 0, BlackM / BlackE * 100, NA_real_), na.rm = TRUE),
    avg_moe_percent_white = mean(if_else(WhiteE != 0, WhiteM / WhiteE * 100, NA_real_), na.rm = TRUE),
    avg_moe_percent_latin = mean(if_else(LatinxE != 0, LatinxM / LatinxE * 100, NA_real_), na.rm = TRUE)
  )
  

# Use group_by() and summarize() to create this comparison
# Create a professional table showing the patterns
moe_issues_2 <- moe_issues_2 %>%
  mutate(avg_moe_percent_black_c = paste0(round(avg_moe_percent_black, 2), "%"),
         avg_moe_percent_white_c = paste0(round(avg_moe_percent_white, 2), "%"),
         avg_moe_percent_latin_c = paste0(round(avg_moe_percent_latin, 2), "%")) 

moe_issues_2 %>%
  arrange(desc(total_pop_size))%>%
  select(County_Name, total_pop_size, avg_moe_percent_black_c, avg_moe_percent_white_c, avg_moe_percent_latin_c) %>% 
  kable(col.names = c("County", "Total Population Size", "Avg Black MOE % of Estimate", "Avg White MOE % of Estimate", "Avg Latin MOE % of Estimate"),
        caption = "Average MOE % of Estimate of Different Racial Groups by County",
        align = "r",
        digits = 0)
```
**Pattern Analysis:** 

Given that there was not a single tract in the three counties where all three racial population MOEs were below 10% of the estimate itself, I decided to make categories "Unreliable" where MOE was up to 50% of estimate, "Very unreliable" if 50- 100 % of estimate, and then if it was over 100, that indicates the MOE is bigger than the estimate itself, or "Inf" shows that the estimate was 0, which can't be a denominator. We can see that on this scale, the more racially homogenous an area is on average, the less reliable the estimates are for that area. I also looked at the averagve MOEs as percent of Estimate for the three different racial groups by county, and accross all three counties, the White population had the lowest average MOE % of Estimate (except in Keweenaw, but this is based on only one tract having any estimate Latinx population at all).  

# Part 5: Policy Recommendations

## 5.1 Analysis Integration and Professional Summary

**Your Task:** Write an executive summary that integrates findings from all four analyses.

**Executive Summary Requirements:**

1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?
2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?
3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?
4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?

**Executive Summary:**

Accross the data I analyzed, the clearest pattern that emerged is that the heterogenous a tract, the more unreliable the estimates. We also see that this unreliability is not evenly shared, but whatever population is in the minority faces more unreliable estimates, leading to a sort of double marginalization. 

In Michigan, Black and Latinx populations face the greatest risk of algorithmic bias, even in a county that is relatively diverse, like Kalamazoo, any given tract might have a much higher White majority. 

The underlying issues that could be at play here are that when attaining a survey sample especially in a census tract with a relatively low population and very low diversity, there might be a handful of people of the demographic the census is trying to estimate the size of, causing issues in extrapolating from the sample to the overall makeup of the tract and the county. In Michigan specifically, the state is about 3/4 White, and there is a history of racialized segregration of living areas that persists today, so even in diverse areas, any given tract might have high unreliability because of a more homogenous makeup. 

The Department could address this by supplementing census data with further sampling to add to the dataset, however this risks also overburdening minority populations with survey fatigue. The Department should at least be very cautious and skeptical of algorithmic decision-making based on data at the census tract level, and should set a higher minimum population size where data reliability of all racial/ethnic groups is adequately low for any allocations or programs that might be based on these estimates. 

## 6.3 Specific Recommendations

**Your Task:** Create a decision framework for algorithm implementation.

```{r recommendations-data}
# Create a summary table using your county reliability data
# Include: county name, median income, MOE percentage, reliability category

income_summary <- mi_county_pop_income %>% select(County_Name, median_household_incomeE, income_moe_percent, income_e_reliability)

# Add a new column with algorithm recommendations using case_when():
# - High Confidence: "Safe for algorithmic decisions"
# - Moderate Confidence: "Use with caution - monitor outcomes"  
# - Low Confidence: "Requires manual review or additional data"
income_summary <- income_summary %>%
  mutate(safe = case_when(
    income_e_reliability == "High Confidence" ~ "Safe for algorithmic decisions",
    income_e_reliability == "Moderate Confidence" ~ "Use with caution - monitor outcomes",
    income_e_reliability == "Low Confidence" ~ "Requires manual review or additional data"
  ))

# Format as a professional table with kable()
income_summary %>%
  select(County_Name, median_household_incomeE, safe) %>%
  arrange(median_household_incomeE) %>%
  kable(
    col.names = c("County Name", "Median Household Income", "Algorithm Recommendation"),
    digit = 0,
    format.args = list(big.mark = ","),
    align = "l",
    caption = "Median Income of Michigan Counties by How Safe they are to use for Algorithmic Decision-making"
  )
  
```

**Key Recommendations:**

**Your Task:** Use your analysis results to provide specific guidance to the department.

1. **Counties suitable for immediate algorithmic implementation:** 

The following counties have reliable median income estimates, because the margin of error of the estimate is less than 5% of the estimate itself: 

 1 Alcona        
 2 Allegan       
 3 Alpena        
 4 Antrim        
 5 Arenac        
 6 Barry         
 7 Bay           
 8 Berrien       
 9 Branch        
10 Calhoun       
11 Cass          
12 Charlevoix    
13 Cheboygan     
14 Chippewa      
15 Clare         
16 Clinton       
17 Dickinson     
18 Eaton         
19 Genesee       
20 Gladwin       
21 Grand Traverse
22 Gratiot       
23 Hillsdale     
24 Houghton      
25 Huron         
26 Ingham        
27 Ionia         
28 Isabella      
29 Jackson       
30 Kalamazoo     
31 Kent          
32 Lapeer        
33 Lenawee       
34 Livingston    
35 Macomb        
36 Manistee      
37 Marquette     
38 Mason         
39 Midland       
40 Monroe        
41 Montcalm      
42 Muskegon      
43 Newaygo       
44 Oakland       
45 Oceana        
46 Ogemaw        
47 Osceola       
48 Ottawa        
49 Saginaw       
50 St. Clair     
51 St. Joseph    
52 Sanilac       
53 Shiawassee    
54 Tuscola       
55 Washtenaw     
56 Wayne 

2. **Counties requiring additional oversight:** 

The following counties' median income estimates should be used with caution, given that the margin of error is 5 - 10% of the estimate. Any algorithmic decisions based on these estimates should account for the possibility that the median income is up to 10% higher or lower. 

 1 Alger       
 2 Baraga      
 3 Benzie      
 4 Crawford    
 5 Delta       
 6 Emmet       
 7 Gogebic     
 8 Iosco       
 9 Iron        
10 Kalkaska    
11 Lake        
12 Leelanau    
13 Luce        
14 Mackinac    
15 Mecosta     
16 Menominee   
17 Missaukee   
18 Montmorency 
19 Ontonagon   
20 Oscoda      
21 Otsego      
22 Presque Isle
23 Roscommon   
24 Van Buren   
25 Wexford 

3. **Counties needing alternative approaches:** 

The following counties' median income estimates are low confidence. No algorithmic decisions should be based on them without manual review or additional surveying to insure that the populations are adequately represented. 

1 Keweenaw   
2 Schoolcraft

## Questions for Further Investigation

How come even majority Black census tracts in Kalamazoo have a low confidence estimate compared to a majority White census tract? 

How racially segregated are census tracts in Michigan in general -- i.e. how many tracts are at least 3/4 one race? How does this compare to other states? How does it compare to the past? 


# Technical Notes

**Data Sources:** 

- U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates
- Retrieved via tidycensus R package on [date]

**Reproducibility:** 

- All analysis conducted in R version: RStudio 2025.09.0+387 "Cucumberleaf Sunflower" Release 
- Census API key required for replication
- Complete code and documentation available at: https://musa-5080-fall-2025.github.io/portfolio-setup-kkxix

**Methodology Notes:**
As noted above, Given that there was not a single tract in the Kalamazoo, Crawford, and Keweenaw counties where all three racial population MOEs were below 10% of the estimate itself, I created a scale of how unreliable they are. If data in these tracts become more reliable, or if the method is reproduced for other counties, the scale should be adjusted to mroe accurately capture the scale of reliability for the selected area. 

**Limitations:**
Given that I chose three relatively low population counties in a state with a vary large White majority, the conclusions made about the link between racial homogeneity and reliability of minority estimates is a limited conclusion. 

---

## Submission Checklist

Before submitting your portfolio link on Canvas:

- [ ] All code chunks run without errors
- [ ] All "[Fill this in]" prompts have been completed
- [ ] Tables are properly formatted and readable
- [ ] Executive summary addresses all four required components
- [ ] Portfolio navigation includes this assignment
- [ ] Census API key is properly set 
- [ ] Document renders correctly to HTML

**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`